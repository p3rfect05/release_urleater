// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Отрисовывает главную страницу, если пользователь авторизован, иначе перенаправляет на /login.",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Страницы"
                ],
                "summary": "Рендер главной страницы",
                "responses": {
                    "200": {
                        "description": "HTML главной страницы",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/update-links": {
            "put": {
                "description": "Администратор может изменить число доступных ссылок для указанного пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Администрирование"
                ],
                "summary": "Обновление количества коротких ссылок пользователя",
                "parameters": [
                    {
                        "description": "Данные для обновления",
                        "name": "UpdateUserShortLinksRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateUserShortLinksRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновлённые данные пользователя",
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateUserShortLinksResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера или неавторизованный доступ",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/links": {
            "get": {
                "description": "Отрисовывает страницу со списком ссылок, если пользователь авторизован, иначе перенаправляет на /login.",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Страницы"
                ],
                "summary": "Рендер страницы ссылок",
                "responses": {
                    "200": {
                        "description": "HTML страницы ссылок",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "get": {
                "description": "Отрисовывает HTML-страницу для входа пользователя.",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Страницы"
                ],
                "summary": "Рендер страницы логина",
                "responses": {
                    "200": {
                        "description": "HTML страницы логина",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Аутентифицирует пользователя по email и паролю, создавая сессию.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Аутентификация"
                ],
                "summary": "Вход пользователя",
                "parameters": [
                    {
                        "description": "Данные для логина",
                        "name": "LoginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Перенаправление на главную страницу",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный запрос или уже авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login/code": {
            "post": {
                "description": "Инициирует процесс входа по коду, отправляя код на указанный email.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Аутентификация"
                ],
                "summary": "Запрос кода для входа",
                "parameters": [
                    {
                        "description": "Запрос на получение кода для входа",
                        "name": "GetLoginWithCodeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.GetLoginWithCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Код отправлен"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login/code/submit": {
            "post": {
                "description": "Проверяет введённый код для входа и аутентифицирует пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Аутентификация"
                ],
                "summary": "Подтверждение кода входа",
                "parameters": [
                    {
                        "description": "Данные для входа по коду",
                        "name": "LoginWithCodeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginWithCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Вход выполнен успешно"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "description": "Завершает сессию пользователя и перенаправляет на /login.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Аутентификация"
                ],
                "summary": "Выход пользователя",
                "responses": {
                    "302": {
                        "description": "Перенаправление на /login",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/register": {
            "get": {
                "description": "Отрисовывает HTML-страницу для регистрации нового пользователя.",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Страницы"
                ],
                "summary": "Рендер страницы регистрации",
                "responses": {
                    "200": {
                        "description": "HTML страницы регистрации",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Регистрирует нового пользователя по email и паролю и создаёт сессию.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Аутентификация"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "RegisterRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Перенаправление на главную страницу",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный запрос или уже авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "description": "Отрисовывает HTML-страницу для поиска коротких ссылок.",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Страницы"
                ],
                "summary": "Рендер страницы поиска ссылок",
                "responses": {
                    "200": {
                        "description": "HTML страницы поиска ссылок",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/shortlink": {
            "post": {
                "description": "Создаёт короткую ссылку, сопоставляя её с длинным URL для авторизованного пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ссылки"
                ],
                "summary": "Создание короткой ссылки",
                "parameters": [
                    {
                        "description": "Данные для создания ссылки",
                        "name": "CreateShortLinkRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateShortLinkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Созданная ссылка",
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateShortLinkResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос или неавторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет указанную короткую ссылку для авторизованного пользователя.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ссылки"
                ],
                "summary": "Удаление короткой ссылки",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Короткая ссылка для удаления",
                        "name": "short_link",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ссылка успешно удалена"
                    },
                    "400": {
                        "description": "Неверный запрос или неавторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/shortlink/create": {
            "get": {
                "description": "Отрисовывает HTML-страницу для создания новой короткой ссылки.",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Страницы"
                ],
                "summary": "Рендер страницы создания короткой ссылки",
                "responses": {
                    "200": {
                        "description": "HTML страницы создания ссылки",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/shortlinks/search": {
            "get": {
                "description": "Ищет короткие ссылки, содержащие указанное слово, с поддержкой пагинации.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ссылки"
                ],
                "summary": "Поиск коротких ссылок по шаблону",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Подстрока для поиска",
                        "name": "contains_word",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Сдвиг для пагинации",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Результат поиска",
                        "schema": {
                            "$ref": "#/definitions/handlers.GetShortLinksWithMatchingPatternResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос или неавторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/subscriptions": {
            "get": {
                "description": "Возвращает список подписок для авторизованного пользователя.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Подписки"
                ],
                "summary": "Получение подписок",
                "responses": {
                    "200": {
                        "description": "Список подписок",
                        "schema": {
                            "$ref": "#/definitions/handlers.GetSubscriptionsResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос или неавторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/subscriptions/page": {
            "get": {
                "description": "Отрисовывает HTML-страницу для просмотра и управления подписками.",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Страницы"
                ],
                "summary": "Рендер страницы подписок",
                "responses": {
                    "200": {
                        "description": "HTML страницы подписок",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "Возвращает информацию об авторизованном пользователе.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователь"
                ],
                "summary": "Получение данных пользователя",
                "responses": {
                    "200": {
                        "description": "Данные пользователя",
                        "schema": {
                            "$ref": "#/definitions/handlers.GetUserResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос или неавторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/shortlinks": {
            "get": {
                "description": "Возвращает список коротких ссылок текущего пользователя с поддержкой пагинации.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ссылки"
                ],
                "summary": "Получение коротких ссылок пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Лимит записей",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Сдвиг для пагинации",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список ссылок и данные пользователя",
                        "schema": {
                            "$ref": "#/definitions/handlers.GetUserShortLinksResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос или неавторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/shortlinks/number": {
            "get": {
                "description": "Возвращает общее количество коротких ссылок, созданных пользователем.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ссылки"
                ],
                "summary": "Получение общего числа коротких ссылок пользователя",
                "responses": {
                    "200": {
                        "description": "Общее число ссылок",
                        "schema": {
                            "$ref": "#/definitions/handlers.GetUserShortLinksTotalNumberResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос или неавторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/{short_link}": {
            "get": {
                "description": "Перенаправляет пользователя с короткой ссылки на соответствующий длинный URL.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Ссылки"
                ],
                "summary": "Редирект короткой ссылки",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Короткая ссылка",
                        "name": "short_link",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Перенаправление на длинный URL",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.Link": {
            "type": "object",
            "properties": {
                "expiresAt": {
                    "type": "string"
                },
                "longUrl": {
                    "type": "string"
                },
                "shortUrl": {
                    "type": "string"
                },
                "timesVisited": {
                    "type": "integer"
                },
                "userEmail": {
                    "type": "string"
                }
            }
        },
        "dto.Subscription": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "totalUrls": {
                    "type": "integer"
                }
            }
        },
        "dto.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "passwordHash": {
                    "type": "string"
                },
                "urlsLeft": {
                    "type": "integer"
                }
            }
        },
        "handlers.CreateShortLinkRequest": {
            "type": "object",
            "required": [
                "long_url"
            ],
            "properties": {
                "long_url": {
                    "type": "string"
                },
                "short_url": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateShortLinkResponse": {
            "type": "object",
            "properties": {
                "link": {
                    "$ref": "#/definitions/dto.Link"
                }
            }
        },
        "handlers.FormattedLink": {
            "type": "object",
            "properties": {
                "expiresAt": {
                    "type": "string"
                },
                "longUrl": {
                    "type": "string"
                },
                "shortUrl": {
                    "type": "string"
                },
                "timesVisited": {
                    "type": "integer"
                },
                "userEmail": {
                    "type": "string"
                }
            }
        },
        "handlers.GetLoginWithCodeRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "handlers.GetShortLinksWithMatchingPatternResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Link"
                    }
                },
                "offset": {
                    "type": "integer"
                }
            }
        },
        "handlers.GetSubscriptionsResponse": {
            "type": "object",
            "properties": {
                "subscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Subscription"
                    }
                }
            }
        },
        "handlers.GetUserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/dto.User"
                }
            }
        },
        "handlers.GetUserShortLinksResponse": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.FormattedLink"
                    }
                },
                "user": {
                    "$ref": "#/definitions/dto.User"
                }
            }
        },
        "handlers.GetUserShortLinksTotalNumberResponse": {
            "type": "object",
            "properties": {
                "total_user_short_links": {
                    "type": "integer"
                }
            }
        },
        "handlers.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handlers.LoginWithCodeRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "handlers.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateUserShortLinksRequest": {
            "type": "object",
            "required": [
                "delta_links",
                "email"
            ],
            "properties": {
                "delta_links": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateUserShortLinksResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/dto.User"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
