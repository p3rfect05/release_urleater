.PHONY: build

NAME=urleater

build:
	@mkdir -p bin
	go build -race -o bin/${NAME} cmd/*.go

run: build
	bash -c "set -a; . ./build/local/.env; set +a; ./bin/${NAME}"


migrate_up:
	migrate -database "postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable" -path build/migrations up


migrate_down:
	migrate -database "postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable" -path build/migrations down


get_coverage:
	go test ./... -coverprofile cover.out
	go tool cover -html=cover.out

unit_tests:
	go test -v ./tests/create_short_link/
	go test -v ./tests/login_user/
	go test -v ./tests/register_user/


bdd_reg_test:
	go test ./tests/bdd/register -test.v -godog.paths ../features/register.feature -test.run "^TestRegister/"

bdd_login_test:
	go test ./tests/bdd/login -test.v -godog.paths ../features/login.feature -test.run "^TestLogin/"


bdd_create_no_alias_test:
	go test ./tests/bdd/create_short_link_automatic -test.v -godog.paths ../features/create_short_link.feature -test.run "^TestCreateShortLink/Create_Shortlink_with_autogenerated_link"


bdd_create_alias_test:
	go test ./tests/bdd/create_short_link_alias -test.v -godog.paths ../features/create_short_link.feature -test.run  "^TestCreateShortLink/Create_Shortlink_with_alias"

bdd_subscriptions:
	go test ./tests/bdd/subscriptions -test.v -godog.paths ../features/subscriptions.feature -test.run "^TestSubscriptions/"

bdd_get_short_links:
	go test ./tests/bdd/get_short_links -test.v -godog.paths ../features/get_short_links.feature -test.run "^TestGetShortLinks/"


start_selenium:
	selenium-server standalone --port 4444


stress_test:
	echo "GET https://www.youtube.com" | vegeta attack -name=5000qps -rate=5000/1s -duration=10s > results.5000qps.bin

display_stress_test_result:
	cat results.5000qps.bin | vegeta plot > stress_test.result.html
	open stress_test.result.html

prepare_test:
	./clean_database.sh
	#psql "postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable" -c "DELETE FROM users WHERE email='test@example.com'; DELETE FROM urls WHERE short_url = 'firstlink1' OR short_url = 'secondlink2';"

test_all:
	make prepare_test
	make bdd_reg_test
	make bdd_login_test
	make bdd_create_no_alias_test
	make bdd_create_alias_test
	make bdd_subscriptions
	make bdd_get_short_links



